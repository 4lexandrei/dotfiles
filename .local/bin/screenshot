#!/bin/bash

# ┌────────────┐
# │ screenshot │
# └────────────┘
# Take screenshots with `grim` and `slurp`.
# Flags:
# `-c` or `cut` screenshots a selected region.

save_dir="$HOME/Pictures/Screenshots"
timestamp=$(date +%F_%H-%M-%S)
new_save="$save_dir/screenshot-$timestamp.png"

# Create Screenshot dir if it doesn't exist
if [[ ! -d "$save_dir" ]]; then
  printf "Creating %s as screenshots directory\n" "$save_dir"
  mkdir -p "$save_dir"
fi

if [[ "$1" == "cut" || "$1" == "-c" ]]; then
  # Capture region with slurp
  region=$(slurp)

  if [[ -z "$region" ]]; then
    printf "Region selection canceled. Exiting...\n"
    exit 0
  fi

  grim -g "$region" "$new_save"
else

  # Full-screen screenshot
  for i in {4..1}; do
    printf "\rTaking fullscreen screenshot in %d seconds..." "$i"
    sleep 1
  done
  printf "\n"

  grim "$new_save"
fi

# Check if the screenshot was created
if [[ ! -f "$new_save" ]]; then
  printf "[ERROR] Screenshot was not saved. Exiting...\n" >&2
  exit 1
fi

# Prompt for new filename after taking the screenshot
printf "Rename screenshot or press 'Enter' to keep default: "
read -r screenshot_name

if [[ -n "$screenshot_name" ]]; then
  save_as="$save_dir/$screenshot_name.png"
  mv "$new_save" "$save_as"
  printf "Screenshot saved as %s\n" "$save_as"
else
  printf "Screenshot saved as %s\n" "$new_save"
fi
